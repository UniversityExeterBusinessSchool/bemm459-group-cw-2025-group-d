1. Create User (email, phone number, first name, last name, gender, password)
    - when create user you need to check duplicate email for email that is not deleted
    - password need to hash
2. User confirm Email
    - this change confirmation status in Mongodb
3. Update (Address) - Add, Edit, Delete
    - this add/edit/delete in mongodb
4. Update Detail (phone number, first name, last name, gender, password)
    - this add/edit/delete in mongodb
5. Login User
    - generate token and update it into database
6. Check User Token
    - check if token still valid
7. Delete User
    - change isDelete to true in both SQL and Mongodb

8. Create Shop
    - Create shop in SQL
9. Update Shop (Name)
    - Update shop in SQL
10. Delete Shop
    - Delete Product group and Product that relate to this shop (update flg)
    - Delete shop in SQL (update flg)
11. Create product groups to shop
    - Add product groups in mongodb
12. Update product groups to shop
    - Update product groups in mongodb
13. Delete product groups from shop
    - Delete product groups in mongodb
14. Create product to product group
    - Add product to product group in mongodb
15. Update product to product group
    - Update product in product group in mongodb
16. Delete product from product group
    - Delete product from product group in mongodb
17. Get product group transaction history
    - Get product key from product group in mongodb
    - search transaction with product key in mongodb
17. Get product transaction history
    - search transaction with product key in mongodb

18. User Search Product
    - search product group with word from Products in mongodb
    - with sort by [date, price, popularity, rating]
    - pagination
19. User Search Product with category
    - search product group with word, category from Products in mongodo
    - with sort by [date, price, popularity, rating]
    - pagination
20. User recommend page
    - search from user history in mongodb
21. User add product to cart
    - add product to user cart in mongodb
22. User edit product to cart (change amount)
    - edit amount product to user cart in mongodb
23. User remove product to cart
    - remove product from user cart in mongodb
24. User continue cart to payment and create transaction (also choose delivery date)
    - use information from cart to create transaction in SQL
    - add counter to product in mongodb
    - clear data in cart
25. Seller change transaction status and continue to logistic
    - change transaction status in SQL
    - create logistic in SQL
26. Deliverer change logistic status
    - change logistic status in sql

27. get All chat box that relate to you sort by newest to oldest
    - get chat id from message collection as buyer in mongodb
    - get pkshop that relate to user from sql
    - get chat id with pkshop from message collection as seller in mongodb
28. User/Seller get message between User and Seller sort by newest to oldest
    - get message by chat id from [get All chat box that relate to you sort by newest to oldest]
29. User/Seller send message between User and Seller
    - check if message between those 2 already exist or not. if not exist then create new message.
    - add message to message collection in mongodb
30. User/Seller unsend message between User and Seller
    - delete (update flag) message from message collection in mongodb
31. User review product
    - update review comment in product in mongodb

Filename UseCase + no of use case + description of use case.
CamelCase
Everything is lowercase letter unless it Class, Table or Carmelcase.
Table and Collection name is prural.
if you want to use class, you need to create class in ResultObject for that usecase then import it.
function name start with [get, set, add, delete].
Use useCase00 as example for your code.